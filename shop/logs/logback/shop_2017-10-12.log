2017-10-12 00:38:25 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-12 00:38:25 http-nio-8080-exec-8 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-12 00:38:25 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 00:38:26 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-12 00:38:26 http-nio-8080-exec-10 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-12 00:38:26 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 00:38:44 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-12 00:38:44 http-nio-8080-exec-2 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-12 00:38:44 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 00:38:53 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:53 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 00:38:53 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-12 00:38:54 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:54 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 00:38:54 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-12 00:38:55 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:55 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 00:38:55 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-12 00:38:56 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:56 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 00:38:56 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-12 00:38:57 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:57 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 00:38:57 http-nio-8080-exec-2 DEBUG <==      Total: 2
2017-10-12 00:38:58 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:38:58 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 00:38:58 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-12 00:39:00 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:00 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 00:39:00 http-nio-8080-exec-3 DEBUG <==      Total: 2
2017-10-12 00:39:02 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:02 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 00:39:02 http-nio-8080-exec-6 DEBUG <==      Total: 2
2017-10-12 00:39:06 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:06 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 00:39:06 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-12 00:39:08 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:08 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 00:39:08 http-nio-8080-exec-5 DEBUG <==      Total: 2
2017-10-12 00:39:09 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:09 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 00:39:09 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-12 00:39:10 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:10 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 00:39:10 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-12 00:39:12 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:12 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 00:39:12 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-12 00:39:13 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:13 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 00:39:13 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-12 00:39:14 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:14 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 00:39:14 http-nio-8080-exec-2 DEBUG <==      Total: 2
2017-10-12 00:39:14 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-12 00:39:14 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 00:39:14 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-12 01:45:22 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-12 01:45:22 http-nio-8080-exec-8 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-12 01:45:22 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 01:46:15 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 01:46:26 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 01:46:26 http-nio-8080-exec-1 DEBUG ==> Parameters: 2(Long)
2017-10-12 01:46:26 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 01:46:29 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-12 01:47:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-12 01:47:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-12 01:47:46 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 01:48:29 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 01:48:29 http-nio-8080-exec-5 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-12 01:48:29 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 01:48:29 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 01:48:29 http-nio-8080-exec-9 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-12 01:48:29 http-nio-8080-exec-9 DEBUG <==      Total: 0
2017-10-12 01:48:34 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 01:48:34 http-nio-8080-exec-7 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-12 01:48:34 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 01:53:24 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-12 01:53:24 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 01:53:24 http-nio-8080-exec-4 DEBUG <==      Total: 15
2017-10-12 01:53:27 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from banner_category where del_flag=0 
2017-10-12 01:53:27 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 01:53:27 http-nio-8080-exec-9 DEBUG <==      Total: 7
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG <==      Total: 10
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 01:53:28 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 01:53:34 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 01:53:34 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 01:53:34 http-nio-8080-exec-3 DEBUG <==      Total: 12
2017-10-12 01:53:43 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_category a left join good_category b on a.parent_id=b.id where a.id = ? 
2017-10-12 01:53:43 http-nio-8080-exec-7 DEBUG ==> Parameters: 5(Long)
2017-10-12 01:53:43 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 01:53:44 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 01:53:44 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 01:53:44 http-nio-8080-exec-6 DEBUG <==      Total: 12
2017-10-12 01:54:03 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 01:54:03 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 01:54:03 http-nio-8080-exec-9 DEBUG <==      Total: 12
2017-10-12 02:02:29 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:02:29 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:02:29 http-nio-8080-exec-5 DEBUG <==      Total: 12
2017-10-12 02:02:37 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_category a left join good_category b on a.parent_id=b.id where a.id = ? 
2017-10-12 02:02:37 http-nio-8080-exec-10 DEBUG ==> Parameters: 6(Long)
2017-10-12 02:02:37 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:02:38 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:02:38 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:02:38 http-nio-8080-exec-4 DEBUG <==      Total: 12
2017-10-12 02:03:11 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:03:11 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:03:11 http-nio-8080-exec-3 DEBUG <==      Total: 12
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG <==      Total: 2
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:03:18 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 02:03:20 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-12 02:03:20 http-nio-8080-exec-1 DEBUG ==> Parameters: goodStatus(String)
2017-10-12 02:03:20 http-nio-8080-exec-1 DEBUG <==      Total: 3
2017-10-12 02:03:20 http-nio-8080-exec-1 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 02:03:20 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 02:03:20 http-nio-8080-exec-6 DEBUG ==> Parameters: 2(Long)
2017-10-12 02:03:20 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:03:24 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG <==      Total: 5
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) from sys_user where del_flag=0 
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:03:27 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.name,a.user_type,a.phone,a.good_category_type,a.status,a.create_date,a.update_date ,b.name type_name from user a left join good_category b on a.good_category_type=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG <==      Total: 10
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG ==>  Preparing: select count(1) from user where del_flag=0 
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:03:31 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG <==      Total: 5
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from sys_user where del_flag=0 
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 02:06:51 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 02:15:15 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-12 02:15:15 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:15:15 http-nio-8080-exec-8 DEBUG <==      Total: 15
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG <==      Total: 10
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:15:16 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 02:15:16 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from banner_category where del_flag=0 
2017-10-12 02:15:16 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 02:15:16 http-nio-8080-exec-7 DEBUG <==      Total: 7
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.banner_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from banner a left join banner_category b on a.banner_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG <==      Total: 5
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from banner where del_flag=0 
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:15:16 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.name,a.user_type,a.phone,a.good_category_type,a.status,a.create_date,a.update_date ,b.name type_name from user a left join good_category b on a.good_category_type=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG <==      Total: 10
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) from user where del_flag=0 
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 02:15:19 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 02:15:20 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:15:20 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 02:15:20 http-nio-8080-exec-6 DEBUG <==      Total: 12
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:15:21 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 02:15:23 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 02:15:24 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-12 02:15:24 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:15:24 http-nio-8080-exec-4 DEBUG <==      Total: 3
2017-10-12 02:27:28 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 02:27:28 http-nio-8080-exec-9 DEBUG ==> Parameters: 18825113546(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 02:27:28 http-nio-8080-exec-9 DEBUG <==      Total: 0
2017-10-12 02:27:32 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 02:27:32 http-nio-8080-exec-6 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 02:27:32 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 02:34:35 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-12 02:34:35 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 02:34:35 http-nio-8080-exec-9 DEBUG <==      Total: 15
2017-10-12 02:34:38 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:34:38 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:34:38 http-nio-8080-exec-8 DEBUG <==      Total: 12
2017-10-12 02:34:45 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_category a left join good_category b on a.parent_id=b.id where a.id = ? 
2017-10-12 02:34:45 http-nio-8080-exec-4 DEBUG ==> Parameters: 5(Long)
2017-10-12 02:34:45 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 02:35:41 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:35:41 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:35:41 http-nio-8080-exec-3 DEBUG <==      Total: 12
2017-10-12 02:35:45 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:35:45 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 02:35:45 http-nio-8080-exec-6 DEBUG <==      Total: 12
2017-10-12 02:35:47 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_category a left join good_category b on a.parent_id=b.id where a.id = ? 
2017-10-12 02:35:47 http-nio-8080-exec-10 DEBUG ==> Parameters: 5(Long)
2017-10-12 02:35:47 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:35:50 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:35:50 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:35:50 http-nio-8080-exec-4 DEBUG <==      Total: 12
2017-10-12 02:36:34 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:36:34 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:36:34 http-nio-8080-exec-5 DEBUG <==      Total: 12
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 02:36:35 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:36:37 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-12 02:36:37 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 02:36:37 http-nio-8080-exec-5 DEBUG <==      Total: 3
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 02:36:37 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG <==      Total: 5
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from sys_user where del_flag=0 
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 02:36:38 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.name,a.user_type,a.phone,a.good_category_type,a.status,a.create_date,a.update_date ,b.name type_name from user a left join good_category b on a.good_category_type=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG <==      Total: 10
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) from user where del_flag=0 
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 02:36:39 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG <==      Total: 10
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 02:36:40 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 02:36:40 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from banner_category where del_flag=0 
2017-10-12 02:36:40 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 02:36:40 http-nio-8080-exec-7 DEBUG <==      Total: 7
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.banner_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from banner a left join banner_category b on a.banner_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG <==      Total: 5
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) from banner where del_flag=0 
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-12 02:36:40 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 02:36:45 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_category a left join good_category b on a.parent_id=b.id where a.id = ? 
2017-10-12 02:36:45 http-nio-8080-exec-10 DEBUG ==> Parameters: 5(Long)
2017-10-12 02:36:45 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 02:36:49 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:36:49 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 02:36:49 http-nio-8080-exec-4 DEBUG <==      Total: 12
2017-10-12 02:43:45 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 02:43:45 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 02:43:45 http-nio-8080-exec-2 DEBUG <==      Total: 12
2017-10-12 03:40:32 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10612 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-12 03:40:32 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-12 03:40:32 main INFO No active profile set, falling back to default profiles: default
2017-10-12 03:40:37 main INFO Started ShopApplication in 4.603 seconds (JVM running for 5.103)
2017-10-12 03:41:12 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 03:41:12 http-nio-8080-exec-2 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 03:41:12 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 03:41:13 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 03:41:13 http-nio-8080-exec-6 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 03:41:13 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 03:41:15 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-12 03:41:15 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 03:41:15 http-nio-8080-exec-8 DEBUG <==      Total: 15
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG <==      Total: 10
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 03:41:16 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 03:41:17 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from banner_category where del_flag=0 
2017-10-12 03:41:17 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 03:41:17 http-nio-8080-exec-5 DEBUG <==      Total: 7
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.banner_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from banner a left join banner_category b on a.banner_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG <==      Total: 5
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from banner where del_flag=0 
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:41:17 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 03:41:22 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-12 03:41:22 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 03:41:22 http-nio-8080-exec-9 DEBUG <==      Total: 12
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 03:41:23 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 03:41:27 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-12 03:41:27 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 03:41:27 http-nio-8080-exec-9 DEBUG <==      Total: 3
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 03:41:28 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 03:41:33 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-12 03:41:33 http-nio-8080-exec-6 DEBUG ==> Parameters: goodStatus(String)
2017-10-12 03:41:33 http-nio-8080-exec-6 DEBUG <==      Total: 3
2017-10-12 03:41:33 http-nio-8080-exec-6 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 03:41:33 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 03:41:33 http-nio-8080-exec-10 DEBUG ==> Parameters: 2(Long)
2017-10-12 03:41:33 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-12 03:41:40 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-12 03:56:39 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-12 03:56:39 http-nio-8080-exec-3 DEBUG ==> Parameters: goodStatus(String)
2017-10-12 03:56:39 http-nio-8080-exec-3 DEBUG <==      Total: 3
2017-10-12 03:56:39 http-nio-8080-exec-3 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 03:56:39 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 03:56:39 http-nio-8080-exec-8 DEBUG ==> Parameters: 2(Long)
2017-10-12 03:56:39 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG ==> Parameters: 足球鞋(String), 阿迪(String), 1(Long), /image/bannerImg/90ee0398-2348-436a-beea-e1025a4449a6.png(String), 1(String), 2017-10-12 03:56:42.865(Timestamp), 2(Long)
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG ==> Parameters: 2222(String), 12(String), 600(BigDecimal), 500(BigDecimal), 2(Long)
2017-10-12 03:56:42 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:56:42 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 03:56:47 http-nio-8080-exec-10 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 03:56:47 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 03:56:47 http-nio-8080-exec-9 DEBUG ==> Parameters: 2(Long)
2017-10-12 03:56:47 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG <==      Total: 2
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 03:56:48 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG <==      Total: 2
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 03:56:55 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 03:57:51 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'categoryIdName' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.id = ? 
2017-10-12 03:57:51 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-12 03:57:51 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 03:57:53 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 04:21:30 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-12 04:21:30 http-nio-8080-exec-3 DEBUG ==> Parameters: goodStatus(String)
2017-10-12 04:21:30 http-nio-8080-exec-3 DEBUG <==      Total: 3
2017-10-12 04:21:30 http-nio-8080-exec-3 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 04:21:30 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-12 04:21:30 http-nio-8080-exec-8 DEBUG ==> Parameters: 2(Long)
2017-10-12 04:21:30 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-12 04:21:32 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 04:37:30 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 
2017-10-12 04:37:30 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 04:37:30 http-nio-8080-exec-7 DEBUG <==      Total: 3
2017-10-12 04:37:30 http-nio-8080-exec-7 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG ==>  Preparing: UPDATE `dict` SET `del_flag` = '1' where id = ? 
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG ==> Parameters: 1(Long)
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG <==    Updates: 1
2017-10-12 04:37:41 http-nio-8080-exec-3 INFO : 从缓存中删除字典All >> 1
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG ==> Parameters: 1(Long)
2017-10-12 04:37:41 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 04:37:41 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 
2017-10-12 04:37:41 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 04:37:41 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-12 04:37:41 http-nio-8080-exec-8 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: UPDATE `dict` SET `del_flag` = '1' where id = ? 
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 2(Long)
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-12 04:37:46 http-nio-8080-exec-1 INFO : 从缓存中删除字典All >> 2
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 2(Long)
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: UPDATE `dict` SET `del_flag` = '1' where id = ? 
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 3(Long)
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 3(Long)
2017-10-12 04:37:46 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 04:37:46 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 
2017-10-12 04:37:46 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-12 04:37:46 http-nio-8080-exec-4 DEBUG <==      Total: 0
2017-10-12 04:37:46 http-nio-8080-exec-4 INFO 字典列表插入缓存 >> []
2017-10-12 04:37:59 http-nio-8080-exec-10 INFO 从缓存中获取了字典列表 >> []
2017-10-12 04:38:24 http-nio-8080-exec-2 DEBUG ==>  Preparing: insert into good (id,user_id, title, name, good_category_type, good_image, status, create_date, update_date, del_flag ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2017-10-12 04:38:24 http-nio-8080-exec-2 DEBUG ==> Parameters: null, 1(Long), null, LALA(String), null, null, null, 2017-10-12 04:38:24.293(Timestamp), 2017-10-12 04:38:24.293(Timestamp), 0(String)
2017-10-12 04:38:25 http-nio-8080-exec-5 INFO 从缓存中获取了字典列表 >> []
2017-10-12 04:38:31 http-nio-8080-exec-3 DEBUG ==>  Preparing: insert into good (id,user_id, title, name, good_category_type, good_image, status, create_date, update_date, del_flag ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2017-10-12 04:38:31 http-nio-8080-exec-3 DEBUG ==> Parameters: null, 1(Long), null, 11(String), null, null, null, 2017-10-12 04:38:31.107(Timestamp), 2017-10-12 04:38:31.107(Timestamp), 0(String)
2017-10-12 04:38:32 http-nio-8080-exec-8 INFO 从缓存中获取了字典列表 >> []
2017-10-12 04:39:27 http-nio-8080-exec-2 INFO 从缓存中获取了字典列表 >> []
2017-10-12 04:40:41 http-nio-8080-exec-3 INFO 从缓存中获取了字典列表 >> []
2017-10-12 04:41:00 http-nio-8080-exec-2 DEBUG ==>  Preparing: insert into dict (id, name, value, key_type, sort, create_date, update_date, del_flag) values (?, ?, ?, ?, ?, ?, ?, ?) 
2017-10-12 04:41:00 http-nio-8080-exec-2 DEBUG ==> Parameters: null, 11(String), 11(String), 11(String), 11(Long), 2017-10-12 04:41:00.504(Timestamp), 2017-10-12 04:41:00.504(Timestamp), 0(String)
2017-10-12 04:41:00 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-12 04:41:00 http-nio-8080-exec-2 INFO : 从缓存中删除字典All >> 
2017-10-12 04:41:00 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 
2017-10-12 04:41:00 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-12 04:41:00 http-nio-8080-exec-7 DEBUG <==      Total: 4
2017-10-12 04:41:00 http-nio-8080-exec-7 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}]
2017-10-12 04:41:04 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:41:04 http-nio-8080-exec-5 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:41:04 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 04:41:07 http-nio-8080-exec-1 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}]
2017-10-12 04:41:10 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:41:10 http-nio-8080-exec-6 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:41:10 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 04:41:14 http-nio-8080-exec-10 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}]
2017-10-12 04:41:18 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:41:18 http-nio-8080-exec-9 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:41:18 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-12 04:42:41 main INFO Starting ShopApplication on IE361.COM-30530 with PID 7700 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-12 04:42:41 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-12 04:42:41 main INFO No active profile set, falling back to default profiles: default
2017-10-12 04:42:46 main INFO Started ShopApplication in 5.501 seconds (JVM running for 6.077)
2017-10-12 04:42:58 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:42:58 http-nio-8080-exec-1 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:42:58 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 04:42:59 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:42:59 http-nio-8080-exec-8 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:42:59 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 04:43:00 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:43:00 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:43:00 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 04:43:02 http-nio-8080-exec-6 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}]
2017-10-12 04:43:07 http-nio-8080-exec-7 DEBUG ==>  Preparing: insert into dict (id, name, value, key_type, sort, create_date, update_date, del_flag) values (?, ?, ?, ?, ?, ?, ?, ?) 
2017-10-12 04:43:07 http-nio-8080-exec-7 DEBUG ==> Parameters: null, 22(String), 22(String), 22(String), 22(Long), 2017-10-12 04:43:07.091(Timestamp), 2017-10-12 04:43:07.091(Timestamp), 0(String)
2017-10-12 04:43:07 http-nio-8080-exec-7 DEBUG <==    Updates: 1
2017-10-12 04:43:07 http-nio-8080-exec-7 INFO : 从缓存中删除字典All >> 
2017-10-12 04:43:07 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 ORDER BY sort asc 
2017-10-12 04:43:07 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-12 04:43:07 http-nio-8080-exec-8 DEBUG <==      Total: 5
2017-10-12 04:43:07 http-nio-8080-exec-8 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:43:10 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:43:10 http-nio-8080-exec-2 DEBUG ==> Parameters: 6(Long)
2017-10-12 04:43:10 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-12 04:43:56 main INFO Starting ShopApplication on IE361.COM-30530 with PID 8960 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-12 04:43:56 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-12 04:43:56 main INFO No active profile set, falling back to default profiles: default
2017-10-12 04:44:01 main INFO Started ShopApplication in 5.253 seconds (JVM running for 5.939)
2017-10-12 04:44:09 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:44:09 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:44:09 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 04:44:09 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:44:09 http-nio-8080-exec-5 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:44:09 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 04:44:11 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:44:11 http-nio-8080-exec-7 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:44:11 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 04:44:12 http-nio-8080-exec-4 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:44:15 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:44:15 http-nio-8080-exec-6 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:44:15 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 04:44:41 http-nio-8080-exec-5 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:44:43 http-nio-8080-exec-8 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:45:43 http-nio-8080-exec-10 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:45:44 http-nio-8080-exec-2 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:45:44 http-nio-8080-exec-1 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:45:46 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:45:46 http-nio-8080-exec-3 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:45:46 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-12 04:46:30 http-nio-8080-exec-6 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:46:49 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:46:49 http-nio-8080-exec-7 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:46:49 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 04:47:05 http-nio-8080-exec-8 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:47:08 http-nio-8080-exec-6 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:47:16 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:47:16 http-nio-8080-exec-7 DEBUG ==> Parameters: 6(Long)
2017-10-12 04:47:16 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-12 04:47:51 http-nio-8080-exec-8 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:48:06 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:48:06 http-nio-8080-exec-10 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:48:06 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 04:48:23 http-nio-8080-exec-2 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:48:48 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:48:48 http-nio-8080-exec-4 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:48:48 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 04:54:50 main INFO Starting ShopApplication on IE361.COM-30530 with PID 7920 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-12 04:54:50 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-12 04:54:50 main INFO No active profile set, falling back to default profiles: default
2017-10-12 04:54:54 main INFO Started ShopApplication in 4.186 seconds (JVM running for 4.693)
2017-10-12 04:55:06 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:55:06 http-nio-8080-exec-4 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:55:06 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-12 04:55:06 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 04:55:06 http-nio-8080-exec-6 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 04:55:06 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 04:55:08 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 ORDER BY sort asc 
2017-10-12 04:55:08 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-12 04:55:08 http-nio-8080-exec-2 DEBUG <==      Total: 5
2017-10-12 04:55:09 http-nio-8080-exec-2 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:55:10 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:55:10 http-nio-8080-exec-5 DEBUG ==> Parameters: 6(Long)
2017-10-12 04:55:10 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-12 04:55:10 http-nio-8080-exec-5 INFO 字典插入缓存 >> com.zzb.shop.domain.Dict@56de15d7
2017-10-12 04:55:16 http-nio-8080-exec-4 DEBUG ==>  Preparing: update dict SET name = ?, value = ?, key_type = ?, sort = ?, update_date = ? where id = ? 
2017-10-12 04:55:16 http-nio-8080-exec-4 DEBUG ==> Parameters: 223(String), 223(String), 223(String), 223(Long), 2017-10-12 04:55:16.353(Timestamp), 6(Long)
2017-10-12 04:55:17 http-nio-8080-exec-6 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:58:09 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:58:09 http-nio-8080-exec-10 DEBUG ==> Parameters: 5(Long)
2017-10-12 04:58:09 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 04:58:09 http-nio-8080-exec-10 INFO 字典插入缓存 >> com.zzb.shop.domain.Dict@4c971c33
2017-10-12 04:58:11 http-nio-8080-exec-1 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 04:58:18 http-nio-8080-exec-3 DEBUG ==>  Preparing: insert into dict (id, name, value, key_type, sort, create_date, update_date, del_flag) values (?, ?, ?, ?, ?, ?, ?, ?) 
2017-10-12 04:58:18 http-nio-8080-exec-3 DEBUG ==> Parameters: null, 333(String), 333(String), 333(String), 333(Long), 2017-10-12 04:58:18.897(Timestamp), 2017-10-12 04:58:18.897(Timestamp), 0(String)
2017-10-12 04:58:18 http-nio-8080-exec-3 DEBUG <==    Updates: 1
2017-10-12 04:58:18 http-nio-8080-exec-3 INFO : 从缓存中删除字典All >> 
2017-10-12 04:58:18 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 ORDER BY sort asc 
2017-10-12 04:58:18 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-12 04:58:18 http-nio-8080-exec-5 DEBUG <==      Total: 6
2017-10-12 04:58:18 http-nio-8080-exec-5 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}, {del_flag=0, key_type=333, name=333, id=7, sort=333, create_date=2017-10-12 04:58:19.0, value=333, update_date=2017-10-12 04:58:19.0}]
2017-10-12 04:58:24 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 04:58:24 http-nio-8080-exec-6 DEBUG ==> Parameters: 7(Long)
2017-10-12 04:58:24 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 04:58:24 http-nio-8080-exec-6 INFO 字典插入缓存 >> com.zzb.shop.domain.Dict@58c5338e
2017-10-12 04:58:28 http-nio-8080-exec-7 DEBUG ==>  Preparing: update dict SET name = ?, value = ?, key_type = ?, sort = ?, update_date = ? where id = ? 
2017-10-12 04:58:28 http-nio-8080-exec-7 DEBUG ==> Parameters: 3334(String), 3334(String), 3334(String), 3334(Long), 2017-10-12 04:58:28.853(Timestamp), 7(Long)
2017-10-12 04:58:30 http-nio-8080-exec-8 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}, {del_flag=0, key_type=333, name=333, id=7, sort=333, create_date=2017-10-12 04:58:19.0, value=333, update_date=2017-10-12 04:58:19.0}]
2017-10-12 05:00:36 main INFO Starting ShopApplication on IE361.COM-30530 with PID 8432 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-12 05:00:36 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-12 05:00:36 main INFO No active profile set, falling back to default profiles: default
2017-10-12 05:00:39 main INFO Started ShopApplication in 3.957 seconds (JVM running for 4.467)
2017-10-12 05:00:49 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 05:00:49 http-nio-8080-exec-6 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 05:00:49 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-12 05:00:50 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 05:00:50 http-nio-8080-exec-8 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 05:00:50 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-12 05:00:50 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-12 05:00:50 http-nio-8080-exec-10 DEBUG ==> Parameters: 18825113545(String), e10adc3949ba59abbe56e057f20f883e(String)
2017-10-12 05:00:50 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-12 05:00:52 http-nio-8080-exec-7 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=11, name=11, id=5, sort=11, create_date=2017-10-12 04:41:01.0, value=11, update_date=2017-10-12 04:41:01.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}, {del_flag=0, key_type=333, name=333, id=7, sort=333, create_date=2017-10-12 04:58:19.0, value=333, update_date=2017-10-12 04:58:19.0}]
2017-10-12 05:00:55 http-nio-8080-exec-8 INFO 从缓存中获取了字典信息 >> com.zzb.shop.domain.Dict@19120336
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG ==>  Preparing: update dict SET name = ?, value = ?, key_type = ?, sort = ?, update_date = ? where id = ? 
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG ==> Parameters: 117(String), 117(String), 117(String), 117(Long), 2017-10-12 05:01:01.208(Timestamp), 5(Long)
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG <==    Updates: 1
2017-10-12 05:01:01 http-nio-8080-exec-9 INFO : 从缓存中删除字典 ID >> 5
2017-10-12 05:01:01 http-nio-8080-exec-9 INFO : 从缓存中删除字典All >> 5
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where id = ? 
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG ==> Parameters: 5(Long)
2017-10-12 05:01:01 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-12 05:01:01 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 ORDER BY sort asc 
2017-10-12 05:01:01 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-12 05:01:01 http-nio-8080-exec-10 DEBUG <==      Total: 6
2017-10-12 05:01:01 http-nio-8080-exec-10 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}, {del_flag=0, key_type=117, name=117, id=5, sort=117, create_date=2017-10-12 04:41:01.0, value=117, update_date=2017-10-12 05:01:01.0}, {del_flag=0, key_type=333, name=333, id=7, sort=333, create_date=2017-10-12 04:58:19.0, value=333, update_date=2017-10-12 04:58:19.0}]
2017-10-12 05:01:14 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? ORDER BY sort asc 
2017-10-12 05:01:14 http-nio-8080-exec-1 DEBUG ==> Parameters: 22(String)
2017-10-12 05:01:14 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-12 05:01:14 http-nio-8080-exec-1 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}]
2017-10-12 05:01:16 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? ORDER BY sort asc 
2017-10-12 05:01:16 http-nio-8080-exec-3 DEBUG ==> Parameters: 2(String)
2017-10-12 05:01:16 http-nio-8080-exec-3 DEBUG <==      Total: 0
2017-10-12 05:01:16 http-nio-8080-exec-3 INFO 字典列表插入缓存 >> []
2017-10-12 05:01:24 http-nio-8080-exec-4 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=22, name=22, id=6, sort=22, create_date=2017-10-12 04:43:07.0, value=22, update_date=2017-10-12 04:43:07.0}, {del_flag=0, key_type=117, name=117, id=5, sort=117, create_date=2017-10-12 04:41:01.0, value=117, update_date=2017-10-12 05:01:01.0}, {del_flag=0, key_type=333, name=333, id=7, sort=333, create_date=2017-10-12 04:58:19.0, value=333, update_date=2017-10-12 04:58:19.0}]
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG <==      Total: 2
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-12 05:01:53 http-nio-8080-exec-6 DEBUG <==      Total: 1
