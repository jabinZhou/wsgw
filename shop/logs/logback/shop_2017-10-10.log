2017-10-10 00:13:44 main INFO Starting ShopApplication on IE361.COM-30530 with PID 9676 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:13:44 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:13:44 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:14:10 main INFO Starting ShopApplication on IE361.COM-30530 with PID 11560 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:14:10 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:14:10 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:14:17 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10228 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:14:17 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:14:17 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:14:23 main INFO Started ShopApplication in 5.936 seconds (JVM running for 6.63)
2017-10-10 00:14:36 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:14:36 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:14:36 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:14:42 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:14:46 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:14:46 http-nio-8080-exec-2 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:14:46 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:16:19 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:16:59 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:16:59 http-nio-8080-exec-2 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:16:59 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:17:03 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:17:52 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:17:52 http-nio-8080-exec-4 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:17:52 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG <==      Total: 2
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:18:09 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 00:19:36 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10608 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:19:36 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:19:36 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:19:40 main INFO Started ShopApplication in 4.137 seconds (JVM running for 4.725)
2017-10-10 00:21:22 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:21:22 http-nio-8080-exec-7 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:21:22 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:21:22 http-nio-8080-exec-7 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:21:43 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:21:43 http-nio-8080-exec-8 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:21:43 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:21:43 http-nio-8080-exec-8 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:22:34 main INFO Starting ShopApplication on IE361.COM-30530 with PID 11568 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:22:34 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:22:34 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:22:40 main INFO Started ShopApplication in 5.737 seconds (JVM running for 6.443)
2017-10-10 00:23:05 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:23:05 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:23:05 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:23:08 http-nio-8080-exec-1 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:23:16 http-nio-8080-exec-6 INFO CityServiceImpl.findCityById() : 从缓存中获取了城市 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:23:26 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:23:26 http-nio-8080-exec-1 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:23:26 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:23:30 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:24:39 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:24:39 http-nio-8080-exec-10 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:24:39 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 00:26:56 main INFO Starting ShopApplication on IE361.COM-30530 with PID 9684 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:26:56 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:26:56 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:27:02 main INFO Started ShopApplication in 5.368 seconds (JVM running for 6.056)
2017-10-10 00:27:18 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:27:18 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:27:18 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:27:19 http-nio-8080-exec-1 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:27:25 http-nio-8080-exec-5 INFO CityServiceImpl.findCityById() : 从缓存中获取了城市 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:28:00 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:28:00 http-nio-8080-exec-9 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:28:00 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:28:02 http-nio-8080-exec-9 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:31:22 main INFO Starting ShopApplication on IE361.COM-30530 with PID 13164 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:31:22 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:31:22 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:31:27 main INFO Started ShopApplication in 5.699 seconds (JVM running for 6.312)
2017-10-10 00:31:34 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, province_id, city_name, description from city where id = ? 
2017-10-10 00:31:35 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:31:35 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:31:37 http-nio-8080-exec-1 INFO CityServiceImpl.findCityById() : 城市插入缓存 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:31:42 http-nio-8080-exec-5 INFO CityServiceImpl.findCityById() : 从缓存中获取了城市 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:31:54 http-nio-8080-exec-9 INFO CityServiceImpl.findCityById() : 从缓存中获取了城市 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:32:12 main INFO Starting ShopApplication on IE361.COM-30530 with PID 11472 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:32:12 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:32:12 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:32:17 main INFO Started ShopApplication in 5.355 seconds (JVM running for 6.045)
2017-10-10 00:32:27 http-nio-8080-exec-1 INFO CityServiceImpl.findCityById() : 从缓存中获取了城市 >> City{id=1, provinceId=1, cityName='温岭市', description='BYSocket 的家在温岭。'}
2017-10-10 00:32:41 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:32:41 http-nio-8080-exec-9 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:32:41 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:32:45 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:33:01 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:33:01 http-nio-8080-exec-2 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:33:01 http-nio-8080-exec-2 DEBUG <==      Total: 3
2017-10-10 00:33:05 http-nio-8080-exec-2 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:33:07 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:33:07 http-nio-8080-exec-9 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:33:07 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG <==      Total: 2
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:33:17 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 00:33:28 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:33:28 http-nio-8080-exec-4 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:33:28 http-nio-8080-exec-4 DEBUG <==      Total: 3
2017-10-10 00:33:28 http-nio-8080-exec-4 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:33:28 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:33:28 http-nio-8080-exec-7 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:33:28 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:34:53 main INFO Starting ShopApplication on IE361.COM-30530 with PID 11980 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:34:53 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:34:53 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:34:58 main INFO Started ShopApplication in 5.706 seconds (JVM running for 6.289)
2017-10-10 00:35:18 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:35:18 http-nio-8080-exec-2 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:35:18 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:35:21 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:35:21 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:35:22 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:35:22 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:35:22 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:35:22 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:35:36 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:35:36 http-nio-8080-exec-9 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:35:36 http-nio-8080-exec-9 DEBUG <==      Total: 3
2017-10-10 00:35:39 http-nio-8080-exec-9 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:35:41 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:35:41 http-nio-8080-exec-10 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:35:41 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 00:35:46 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:36:15 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:36:15 http-nio-8080-exec-3 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:36:15 http-nio-8080-exec-3 DEBUG <==      Total: 3
2017-10-10 00:36:15 http-nio-8080-exec-3 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:36:15 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:36:15 http-nio-8080-exec-4 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:36:15 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG <==      Total: 2
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:36:24 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 00:36:37 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:36:37 http-nio-8080-exec-7 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:36:37 http-nio-8080-exec-7 DEBUG <==      Total: 3
2017-10-10 00:36:41 http-nio-8080-exec-7 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:36:41 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:36:41 http-nio-8080-exec-8 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:36:41 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:36:45 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:36:56 http-nio-8080-exec-1 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:36:56 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:36:56 http-nio-8080-exec-2 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:36:56 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:37:04 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10556 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:37:04 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:37:04 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:37:09 main INFO Started ShopApplication in 5.263 seconds (JVM running for 5.955)
2017-10-10 00:37:19 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:37:19 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:37:19 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG <==      Total: 2
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 00:37:23 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 00:37:32 http-nio-8080-exec-9 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:37:32 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:37:32 http-nio-8080-exec-2 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:37:32 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 00:38:07 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:38:08 http-nio-8080-exec-3 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:38:08 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:38:08 http-nio-8080-exec-6 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:38:08 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:38:12 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:38:17 http-nio-8080-exec-9 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:38:17 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:38:17 http-nio-8080-exec-2 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:38:17 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:38:20 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-10 00:38:20 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 00:38:20 http-nio-8080-exec-1 DEBUG <==      Total: 12
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 00:39:57 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:41:59 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:42:01 http-nio-8080-exec-5 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:42:01 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:42:01 http-nio-8080-exec-8 DEBUG ==> Parameters: 2(Long)
2017-10-10 00:42:01 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:53:55 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10796 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 00:53:55 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 00:53:55 main INFO No active profile set, falling back to default profiles: default
2017-10-10 00:54:01 main INFO Started ShopApplication in 5.768 seconds (JVM running for 6.346)
2017-10-10 00:54:16 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 00:54:16 http-nio-8080-exec-4 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 00:54:16 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 00:54:19 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 00:54:22 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, value, key_type, sort, create_date, update_date, del_flag from dict where del_flag=0 and key_type =? 
2017-10-10 00:54:22 http-nio-8080-exec-1 DEBUG ==> Parameters: goodStatus(String)
2017-10-10 00:54:22 http-nio-8080-exec-1 DEBUG <==      Total: 3
2017-10-10 00:54:22 http-nio-8080-exec-1 INFO 字典列表插入缓存 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:54:22 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:54:22 http-nio-8080-exec-3 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:54:22 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 00:54:40 http-nio-8080-exec-2 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-10 00:54:40 http-nio-8080-exec-2 DEBUG ==> Parameters: 耐克球鞋(String), 耐克(String), 1(Long), 666(String), 1(String), 2017-10-10 00:54:40.34(Timestamp), 1(Long)
2017-10-10 00:54:40 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-10 00:54:46 http-nio-8080-exec-2 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-10 00:54:46 http-nio-8080-exec-2 DEBUG ==> Parameters: 666(String), 666(String), 666(BigDecimal), 600(BigDecimal), 1(Long)
2017-10-10 00:54:46 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 00:54:49 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 00:55:17 http-nio-8080-exec-7 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:55:17 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:55:17 http-nio-8080-exec-8 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:55:17 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:55:18 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-10 00:55:18 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 00:55:18 http-nio-8080-exec-10 DEBUG <==      Total: 12
2017-10-10 00:55:25 http-nio-8080-exec-2 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-10 00:55:25 http-nio-8080-exec-2 DEBUG ==> Parameters: 耐克球鞋(String), 耐克(String), 6(Long), 666(String), 1(String), 2017-10-10 00:55:25.647(Timestamp), 1(Long)
2017-10-10 00:55:25 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-10 00:55:28 http-nio-8080-exec-2 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-10 00:55:28 http-nio-8080-exec-2 DEBUG ==> Parameters: 666(String), 666(String), 666(BigDecimal), 600(BigDecimal), 1(Long)
2017-10-10 00:55:28 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 00:55:29 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 00:56:23 http-nio-8080-exec-6 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 00:56:38 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 00:56:41 http-nio-8080-exec-10 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:56:41 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:56:41 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:56:41 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG ==> Parameters: 耐克球鞋(String), 耐克(String), 6(Long), 666(String), 3(String), 2017-10-10 00:56:54.72(Timestamp), 1(Long)
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG <==    Updates: 1
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG ==> Parameters: 666(String), 666(String), 666(BigDecimal), 600(BigDecimal), 1(Long)
2017-10-10 00:56:54 http-nio-8080-exec-3 DEBUG <==    Updates: 1
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG <==      Total: 2
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 00:56:56 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 00:57:07 http-nio-8080-exec-5 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:57:07 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:57:07 http-nio-8080-exec-6 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:57:07 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:57:12 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG <==      Total: 2
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:58:00 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 00:58:02 http-nio-8080-exec-4 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:58:02 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:58:02 http-nio-8080-exec-5 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:58:02 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG ==> Parameters: 耐克球鞋(String), 耐克(String), 6(Long), 666(String), 2(String), 2017-10-10 00:58:18.769(Timestamp), 1(Long)
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG <==    Updates: 1
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG ==> Parameters: 666(String), 666(String), 666(BigDecimal), 600(BigDecimal), 1(Long)
2017-10-10 00:58:18 http-nio-8080-exec-6 DEBUG <==    Updates: 1
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG <==      Total: 2
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 00:58:20 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 00:58:27 http-nio-8080-exec-9 INFO 从缓存中获取了字典列表 >> [{del_flag=0, key_type=goodStatus, name=待审核, id=1, sort=1, create_date=2017-10-09 00:00:00.0, value=0, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核通过, id=2, sort=2, create_date=2017-10-09 00:00:00.0, value=1, update_date=2017-10-09 00:00:00.0}, {del_flag=0, key_type=goodStatus, name=审核不通过, id=3, sort=3, create_date=2017-10-09 00:00:00.0, value=2, update_date=2017-10-09 00:00:00.0}]
2017-10-10 00:58:27 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price as 'goodTagPrice',b.good_market_price as 'goodMarketPrice', b.good_images as 'goodImages',b.good_detail as 'goodDetail', c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' from good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.id = ? 
2017-10-10 00:58:27 http-nio-8080-exec-10 DEBUG ==> Parameters: 1(Long)
2017-10-10 00:58:27 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG ==>  Preparing: update good SET title = ?, name = ?, good_category_type = ?, good_image = ?, status = ?, update_date = ? where id = ? 
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG ==> Parameters: 耐克球鞋(String), 耐克(String), 6(Long), 666(String), 0(String), 2017-10-10 00:58:31.296(Timestamp), 1(Long)
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG ==>  Preparing: update good_detail SET good_images = ?, good_detail = ?, good_tag_price = ?, good_market_price = ? where id = ? 
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG ==> Parameters: 666(String), 666(String), 666(BigDecimal), 600(BigDecimal), 1(Long)
2017-10-10 00:58:31 http-nio-8080-exec-1 DEBUG <==    Updates: 1
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG <==      Total: 2
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 00:58:32 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') ORDER BY create_date desc limit 0,10 
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG ==> Parameters: 啊(String)
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG <==      Total: 0
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') 
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG ==> Parameters: 啊(String)
2017-10-10 01:05:05 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') ORDER BY create_date desc limit 0,10 
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG ==> Parameters: 耐(String)
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') 
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG ==> Parameters: 耐(String)
2017-10-10 01:05:11 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 01:05:20 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') ORDER BY create_date desc limit 0,10 
2017-10-10 01:05:20 http-nio-8080-exec-6 DEBUG ==> Parameters: 鞋(String)
2017-10-10 01:05:21 http-nio-8080-exec-6 DEBUG <==      Total: 0
2017-10-10 01:05:21 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') 
2017-10-10 01:05:21 http-nio-8080-exec-6 DEBUG ==> Parameters: 鞋(String)
2017-10-10 01:05:21 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') ORDER BY create_date desc limit 0,10 
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG ==> Parameters: 鞋(String)
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG <==      Total: 0
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') 
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG ==> Parameters: 鞋(String)
2017-10-10 01:05:24 http-nio-8080-exec-7 DEBUG <==      Total: 1
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') ORDER BY create_date desc limit 0,10 
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG ==> Parameters: 阿(String)
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and a.name LIKE concat('%',?,'%') 
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG ==> Parameters: 阿(String)
2017-10-10 01:05:27 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:06:59 main INFO Starting ShopApplication on IE361.COM-30530 with PID 7384 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:06:59 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:06:59 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:07:03 main INFO Started ShopApplication in 4.511 seconds (JVM running for 5.038)
2017-10-10 01:07:14 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:07:14 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:07:14 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:07:18 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) ORDER BY create_date desc limit 0,10 
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG ==> Parameters: 鞋(String), 鞋(String)
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) 
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG ==> Parameters: 鞋(String), 鞋(String)
2017-10-10 01:07:23 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) ORDER BY create_date desc limit 0,10 
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG ==> Parameters: 足(String), 足(String)
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) 
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG ==> Parameters: 足(String), 足(String)
2017-10-10 01:07:31 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) ORDER BY create_date desc limit 0,10 
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG ==> Parameters: (String), (String)
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) 
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG ==> Parameters: (String), (String)
2017-10-10 01:07:34 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 01:07:55 http-nio-8080-exec-2 DEBUG ==>  Preparing: UPDATE `good` SET `del_flag` = '1' WHERE id = ? 
2017-10-10 01:07:55 http-nio-8080-exec-2 DEBUG ==> Parameters: 2(Long)
2017-10-10 01:07:55 http-nio-8080-exec-2 DEBUG <==    Updates: 1
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) ORDER BY create_date desc limit 0,10 
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG ==> Parameters: (String), (String)
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 and (a.name LIKE concat('%',?,'%')or a.title LIKE concat('%',?,'%')) 
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG ==> Parameters: (String), (String)
2017-10-10 01:07:55 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:25:29 main INFO Starting ShopApplication on IE361.COM-30530 with PID 13160 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:25:29 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:25:29 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:25:34 main INFO Started ShopApplication in 4.471 seconds (JVM running for 4.98)
2017-10-10 01:25:42 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:25:42 http-nio-8080-exec-2 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:25:42 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:25:44 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-10 01:25:44 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 01:25:44 http-nio-8080-exec-7 DEBUG <==      Total: 15
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG <==      Total: 10
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 01:25:46 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG <==      Total: 10
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:27:08 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:27:25 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-10 01:27:25 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:27:25 http-nio-8080-exec-4 DEBUG <==      Total: 15
2017-10-10 01:29:54 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12880 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:29:54 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:29:54 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:29:59 main INFO Started ShopApplication in 4.398 seconds (JVM running for 4.904)
2017-10-10 01:30:08 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:30:08 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:30:08 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:30:11 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:30:11 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:30:11 http-nio-8080-exec-8 DEBUG <==      Total: 2
2017-10-10 01:30:28 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-10 01:30:28 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 01:30:28 http-nio-8080-exec-1 DEBUG <==      Total: 15
2017-10-10 01:30:45 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from advertise_category a left join advertise_category b on a.parent_id=b.id where a.id = ? 
2017-10-10 01:30:45 http-nio-8080-exec-3 DEBUG ==> Parameters: 1(Long)
2017-10-10 01:30:45 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:30:47 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:30:47 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:30:47 http-nio-8080-exec-4 DEBUG <==      Total: 2
2017-10-10 01:33:43 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12344 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:33:43 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:33:43 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:33:47 main INFO Started ShopApplication in 4.024 seconds (JVM running for 4.535)
2017-10-10 01:34:00 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:34:00 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:34:00 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:34:03 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:34:03 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 01:34:03 http-nio-8080-exec-3 DEBUG <==      Total: 2
2017-10-10 01:34:05 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_activity_category a left join good_activity_category b on a.parent_id=b.id where a.id = ? 
2017-10-10 01:34:05 http-nio-8080-exec-5 DEBUG ==> Parameters: 1(Long)
2017-10-10 01:34:05 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 01:34:16 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:34:16 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 01:34:16 http-nio-8080-exec-9 DEBUG <==      Total: 2
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG <==      Total: 10
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 01:35:15 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG <==      Total: 10
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:35:19 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:35:20 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:35:20 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:35:20 http-nio-8080-exec-8 DEBUG <==      Total: 3
2017-10-10 01:35:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_activity_category a left join good_activity_category b on a.parent_id=b.id where a.id = ? 
2017-10-10 01:35:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 3(Long)
2017-10-10 01:35:23 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:35:25 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:35:25 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 01:35:25 http-nio-8080-exec-7 DEBUG <==      Total: 3
2017-10-10 01:35:31 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:35:31 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:35:31 http-nio-8080-exec-8 DEBUG <==      Total: 3
2017-10-10 01:35:40 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:35:40 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 01:35:40 http-nio-8080-exec-1 DEBUG <==      Total: 3
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id, a.name, a.parent_id, a.parent_ids, a.create_date, a.update_date, a.del_flag ,b.name as 'parentIdName' from good_activity_category a left join good_activity_category b on a.parent_id=b.id where a.id = ? 
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG ==> Parameters: 2(Long)
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG ==>  Preparing: update good_activity_category SET name = ?, parent_id = ?, parent_ids = ?, update_date = ? where id = ? 
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG ==> Parameters: 特价特价(String), 2(Long), 0,2,3(String), 2017-10-10 01:35:43.463(Timestamp), 3(Long)
2017-10-10 01:35:43 http-nio-8080-exec-6 DEBUG <==    Updates: 1
2017-10-10 01:35:43 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:35:43 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 01:35:43 http-nio-8080-exec-10 DEBUG <==      Total: 3
2017-10-10 01:39:00 http-nio-8080-exec-1 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:39:00 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 01:39:00 http-nio-8080-exec-1 DEBUG <==      Total: 3
2017-10-10 01:46:36 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10472 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:46:36 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:46:36 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:46:40 main INFO Started ShopApplication in 4.226 seconds (JVM running for 4.754)
2017-10-10 01:46:46 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:46:46 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:46:46 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:46:50 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:46:50 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 01:46:50 http-nio-8080-exec-8 DEBUG <==      Total: 3
2017-10-10 01:46:51 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.del_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:46:51 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 01:48:01 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12224 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:48:01 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:48:01 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:48:05 main INFO Started ShopApplication in 3.913 seconds (JVM running for 4.447)
2017-10-10 01:48:13 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:48:13 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:48:13 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:48:13 http-nio-8080-exec-4 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:48:13 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:48:13 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:48:16 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:48:16 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 01:48:16 http-nio-8080-exec-9 DEBUG <==      Total: 3
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 01:48:17 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:51:16 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG ==> Parameters: 特的(String)
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG <==      Total: 0
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG ==> Parameters: 特的(String)
2017-10-10 01:51:25 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:27 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_begin_date asc limit 0,10 
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:31 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_status asc limit 0,10 
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:32 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY type_name asc limit 0,10 
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:33 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_price asc limit 0,10 
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:34 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_title asc limit 0,10 
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG ==> Parameters: 特(String)
2017-10-10 01:51:34 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 01:51:50 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id,good_activity_category_id, good_id, activity_title, activity_price, activity_begin_date, activity_end_date, activity_status, activity_flag from good_activity where id = ? 
2017-10-10 01:51:50 http-nio-8080-exec-5 DEBUG ==> Parameters: 1(Long)
2017-10-10 01:51:50 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 01:52:03 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:52:03 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 01:52:03 http-nio-8080-exec-7 DEBUG <==      Total: 3
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_title asc limit 0,10 
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG ==> Parameters: 特(String)
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG ==> Parameters: 特(String)
2017-10-10 01:52:10 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:57:10 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12556 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 01:57:10 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 01:57:10 main INFO No active profile set, falling back to default profiles: default
2017-10-10 01:57:14 main INFO Started ShopApplication in 4.013 seconds (JVM running for 4.529)
2017-10-10 01:57:27 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 01:57:27 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 01:57:27 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 01:57:30 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:57:30 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 01:57:30 http-nio-8080-exec-3 DEBUG <==      Total: 3
2017-10-10 01:57:33 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 01:57:33 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-10 01:57:33 http-nio-8080-exec-5 DEBUG <==      Total: 3
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 01:57:35 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 01:57:37 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'categoryIdName' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.id = ? 
2017-10-10 01:57:37 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 01:57:37 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG ==> Parameters: 
2017-10-10 01:57:49 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 01:57:55 http-nio-8080-exec-3 DEBUG ==>  Preparing: UPDATE `good_activity` SET `activity_flag` = '1' WHERE id = ? 
2017-10-10 01:57:55 http-nio-8080-exec-3 DEBUG ==> Parameters: 1(Long)
2017-10-10 01:57:55 http-nio-8080-exec-3 DEBUG <==    Updates: 1
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG <==      Total: 0
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 01:57:55 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 12:28:05 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 12:28:05 http-nio-8080-exec-10 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 12:28:05 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 12:28:12 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-10 12:28:12 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 12:28:12 http-nio-8080-exec-9 DEBUG <==      Total: 12
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG <==      Total: 2
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG ==> Parameters: 
2017-10-10 12:28:13 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 12:28:16 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 12:28:16 http-nio-8080-exec-3 DEBUG ==> Parameters: 
2017-10-10 12:28:16 http-nio-8080-exec-3 DEBUG <==      Total: 3
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 12:28:17 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 12:28:19 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'categoryIdName' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.id = ? 
2017-10-10 12:28:19 http-nio-8080-exec-1 DEBUG ==> Parameters: 1(Long)
2017-10-10 12:28:19 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG ==> Parameters: 
2017-10-10 12:28:32 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 21:53:13 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:53:13 http-nio-8080-exec-5 DEBUG ==> Parameters: null, null
2017-10-10 21:53:13 http-nio-8080-exec-5 DEBUG <==      Total: 0
2017-10-10 21:54:12 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:54:12 http-nio-8080-exec-6 DEBUG ==> Parameters: null, null
2017-10-10 21:54:12 http-nio-8080-exec-6 DEBUG <==      Total: 0
2017-10-10 21:54:25 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:54:25 http-nio-8080-exec-5 DEBUG ==> Parameters: null, null
2017-10-10 21:54:25 http-nio-8080-exec-5 DEBUG <==      Total: 0
2017-10-10 21:55:22 main INFO Starting ShopApplication on IE361.COM-30530 with PID 6060 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 21:55:22 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 21:55:22 main INFO No active profile set, falling back to default profiles: default
2017-10-10 21:55:27 main INFO Started ShopApplication in 5.19 seconds (JVM running for 5.762)
2017-10-10 21:56:05 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:56:06 http-nio-8080-exec-7 DEBUG ==> Parameters: null, null
2017-10-10 21:56:06 http-nio-8080-exec-7 DEBUG <==      Total: 0
2017-10-10 21:57:20 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:57:20 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 21:57:20 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 21:57:22 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:57:22 http-nio-8080-exec-5 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 21:57:22 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 21:57:36 http-nio-8080-exec-2 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 21:57:36 http-nio-8080-exec-2 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 21:57:36 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.advertise_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from advertise a left join advertise_category b on a.advertise_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG <==      Total: 10
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG ==>  Preparing: select count(1) from advertise where del_flag=0 
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 21:58:16 http-nio-8080-exec-1 DEBUG <==      Total: 1
2017-10-10 21:58:16 http-nio-8080-exec-8 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from advertise_category where del_flag=0 
2017-10-10 21:58:16 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 21:58:16 http-nio-8080-exec-8 DEBUG <==      Total: 15
2017-10-10 21:58:17 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from banner_category where del_flag=0 
2017-10-10 21:58:17 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 21:58:17 http-nio-8080-exec-10 DEBUG <==      Total: 7
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id, a.title, a.name, a.banner_category_id, a.url, a.create_date, a.update_date, a.del_flag ,b.name as 'type_name' from banner a left join banner_category b on a.banner_category_id=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG <==      Total: 5
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from banner where del_flag=0 
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 21:58:18 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG <==      Total: 5
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG ==>  Preparing: select count(1) from sys_user where del_flag=0 
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG ==> Parameters: 
2017-10-10 21:58:22 http-nio-8080-exec-9 DEBUG <==      Total: 1
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG ==>  Preparing: select a.id,a.name,a.user_type,a.phone,a.good_category_type,a.status,a.create_date,a.update_date ,b.name type_name from user a left join good_category b on a.good_category_type=b.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG <==      Total: 10
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG ==>  Preparing: select count(1) from user where del_flag=0 
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG ==> Parameters: 
2017-10-10 21:58:22 http-nio-8080-exec-8 DEBUG <==      Total: 1
2017-10-10 21:58:24 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_category where del_flag=0 
2017-10-10 21:58:24 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 21:58:24 http-nio-8080-exec-7 DEBUG <==      Total: 12
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , b.id as 'detailId', b.good_tag_price,b.good_market_price, c.activity_title,c.activity_price, d.name AS 'categoryName', e.name AS 'activityName' FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 ORDER BY create_date desc limit 0,10 
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG <==      Total: 2
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) FROM good a LEFT JOIN good_detail b ON a.id=b.good_id LEFT JOIN good_activity c ON b.good_activity_id=c.id AND a.id=c.good_id LEFT JOIN good_category d ON a.good_category_type=d.id LEFT JOIN good_activity_category e ON c.good_activity_category_id=e.id where a.del_flag=0 
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 21:58:25 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 21:58:30 http-nio-8080-exec-7 DEBUG ==>  Preparing: select id, name, parent_id, parent_ids, create_date, update_date, del_flag from good_activity_category where del_flag=0 
2017-10-10 21:58:30 http-nio-8080-exec-7 DEBUG ==> Parameters: 
2017-10-10 21:58:30 http-nio-8080-exec-7 DEBUG <==      Total: 3
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG ==> Parameters: 
2017-10-10 21:58:31 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 21:58:34 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'categoryIdName' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.id = ? 
2017-10-10 21:58:34 http-nio-8080-exec-2 DEBUG ==> Parameters: 1(Long)
2017-10-10 21:58:34 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 ORDER BY activity_end_date desc limit 0,10 
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG ==> Parameters: 
2017-10-10 21:58:35 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_end_date desc limit 0,10 
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG ==> Parameters: 动(String)
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG <==      Total: 0
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG ==> Parameters: 动(String)
2017-10-10 22:01:56 http-nio-8080-exec-2 DEBUG <==      Total: 1
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG ==>  Preparing: select a.id,a.good_activity_category_id, a.good_id, a.activity_title, a.activity_price, a.activity_begin_date, a.activity_end_date, a.activity_status, a.activity_flag ,b.name as 'type_name' from good_activity a left join good_activity_category b on a.good_activity_category_id=b.id where a.activity_flag=0 and a.activity_title LIKE concat('%',?,'%') ORDER BY activity_end_date desc limit 0,10 
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG ==> Parameters: (String)
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG ==>  Preparing: select count(1) from good_activity where activity_flag=0 and activity_title LIKE concat('%',?,'%') 
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG ==> Parameters: (String)
2017-10-10 22:01:59 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 22:11:23 http-nio-8080-exec-6 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 22:11:23 http-nio-8080-exec-6 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:11:23 http-nio-8080-exec-6 DEBUG <==      Total: 1
2017-10-10 22:13:13 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 22:13:13 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:13:13 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 22:13:59 main INFO Starting ShopApplication on IE361.COM-30530 with PID 8324 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 22:13:59 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 22:13:59 main INFO No active profile set, falling back to default profiles: default
2017-10-10 22:14:03 main INFO Started ShopApplication in 4.069 seconds (JVM running for 4.597)
2017-10-10 22:14:09 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 22:14:09 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:14:09 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 22:14:11 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, user_type, phone, password, status, create_date, update_date, del_flag from sys_user where phone = ? and password = ? 
2017-10-10 22:14:11 http-nio-8080-exec-4 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:14:11 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 22:17:57 http-nio-8080-exec-10 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-10 22:17:57 http-nio-8080-exec-10 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:17:57 http-nio-8080-exec-10 DEBUG <==      Total: 1
2017-10-10 22:18:03 http-nio-8080-exec-4 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-10 22:18:03 http-nio-8080-exec-4 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-10 22:18:03 http-nio-8080-exec-4 DEBUG <==      Total: 1
2017-10-10 22:18:07 http-nio-8080-exec-5 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-10 22:18:07 http-nio-8080-exec-5 DEBUG ==> Parameters: 18825113546(String), 123456(String)
2017-10-10 22:18:07 http-nio-8080-exec-5 DEBUG <==      Total: 1
2017-10-10 22:18:17 http-nio-8080-exec-3 DEBUG ==>  Preparing: select id, name, user_type, phone, password, good_category_type, status, create_date, update_date, del_flag from user where phone = ? and password = ? 
2017-10-10 22:18:17 http-nio-8080-exec-3 DEBUG ==> Parameters: 18825113545(String), 123456(String)
2017-10-10 22:18:17 http-nio-8080-exec-3 DEBUG <==      Total: 1
2017-10-10 22:55:27 main INFO Starting ShopApplication on IE361.COM-30530 with PID 10860 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 22:55:27 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 22:55:27 main INFO No active profile set, falling back to default profiles: default
2017-10-10 22:55:31 main INFO Started ShopApplication in 4.427 seconds (JVM running for 4.96)
2017-10-10 23:03:50 main INFO Starting ShopApplication on IE361.COM-30530 with PID 5876 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 23:03:50 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 23:03:50 main INFO No active profile set, falling back to default profiles: default
2017-10-10 23:03:53 main INFO Started ShopApplication in 3.99 seconds (JVM running for 4.572)
2017-10-10 23:04:28 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12952 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 23:04:28 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 23:04:28 main INFO No active profile set, falling back to default profiles: default
2017-10-10 23:04:32 main INFO Started ShopApplication in 4.173 seconds (JVM running for 4.684)
2017-10-10 23:12:02 main INFO Starting ShopApplication on IE361.COM-30530 with PID 12300 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 23:12:02 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 23:12:02 main INFO No active profile set, falling back to default profiles: default
2017-10-10 23:12:06 main INFO Started ShopApplication in 4.297 seconds (JVM running for 4.813)
2017-10-10 23:55:52 main INFO Starting ShopApplication on IE361.COM-30530 with PID 9568 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 23:55:52 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 23:55:52 main INFO No active profile set, falling back to default profiles: default
2017-10-10 23:55:55 main INFO Started ShopApplication in 3.847 seconds (JVM running for 4.383)
2017-10-10 23:56:03 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-10 23:56:03 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 23:56:03 http-nio-8080-exec-1 DEBUG <==      Total: 2
2017-10-10 23:56:12 main INFO Starting ShopApplication on IE361.COM-30530 with PID 2956 (E:\workspace\wsgw\shop\target\classes started by Administrator in E:\workspace\wsgw\shop)
2017-10-10 23:56:12 main DEBUG Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2017-10-10 23:56:12 main INFO No active profile set, falling back to default profiles: default
2017-10-10 23:56:17 main INFO Started ShopApplication in 5.518 seconds (JVM running for 6.215)
2017-10-10 23:56:48 http-nio-8080-exec-1 DEBUG ==>  Preparing: select a.id,a.user_id, a.title, a.name, a.good_category_type, a.good_image, a.status, a.create_date, a.update_date, a.del_flag , c.id as 'detailId', c.good_tag_price,c.good_market_price FROM good a LEFT JOIN good_category b ON a.good_category_type=b.id LEFT JOIN good_detail c ON a.id=c.good_id WHERE b.id=1 AND a.status=1 limit 0,10 
2017-10-10 23:56:48 http-nio-8080-exec-1 DEBUG ==> Parameters: 
2017-10-10 23:56:49 http-nio-8080-exec-1 DEBUG <==      Total: 2
